file.patterns.asy=*.asy

filter.asy=Asymptote (asy)|$(file.patterns.asy)|

lexer.$(file.patterns.asy)=asy

keywordclass.asy=and and_eq asm auto bitand bitor block bool break \\\\
case catch char class compl const const_cast continue \\\\
default delete do double dynamic_cast else enum explicit export extern false float for \\\\
friend goto if inline int long mutable namespace new not not_eq \\\\
operator or or_eq private protected public \\\\
register reinterpret_cast return short signed sizeof static static_cast struct switch \\\\
template this throw true try typedef typeid typename union unsigned using \\\\
virtual void volatile wchar_t while xor xor_eq \\\\
draw import pair real string label box picture size add currentpen drawfermion errorbars \\\\
drawphoton drawvertex filldraw frame xaxis yaxis zaxis drawmomarrow drawgluon \\\\
path cycle dot labely labelx xtick palette drawVertexOX \\\\
ellipse pen defaultpen fill annotate scale xequals yequals xlimits ylimits object arrow guide \\\\
fmdefaults currentprojection currentlight transform title display animation unfill clip texpreamble \\\\

keywords.$(file.patterns.asy)=$(keywordclass.asy)
# keywords2 is for highlighting user defined keywords or function calls or similar
keywords2.$(file.patterns.asy)=

word.chars.asy=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.asy)=$(word.chars.asy)
calltip.asy.word.characters=$(chars.alpha)$(chars.numeric)_
comment.block.asy=//~
comment.stream.start.asy=/*
comment.stream.end.asy=*/
comment.box.start.asy=/*
comment.box.middle.asy= *
comment.box.end.asy= */

#  styles

# Default
style.asy.32=$(font.base)
# Asymptote default
style.asy.0=fore:#808080
# Comment: /* */.
style.asy.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment: //.
style.asy.2=$(colour.code.comment.line),$(font.code.comment.line)
# Numbers
style.asy.3=fore:#F06060
# Keywords
style.asy.4=fore:#FF0000
# Strings
style.asy.5=fore:#000000
# Brackets
style.asy.6=fore:#0000FF,bold
# Operator
style.asy.7=ore:#F0A0D0
# Identifier
style.asy.8=fore:#00A0D0
# User defined keywords
style.asy.9=fore:#B00040

command.compile.*.asy="asy.exe" $(FileNameExt)
command.build.*.asy=
command.go.*.asy= gsview32 $(FileName).eps